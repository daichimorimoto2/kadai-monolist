{"changed":true,"filter":false,"title":"tasksController.php","tooltip":"/kadai-tasklist/app/Http/Controllers/tasksController.php","value":"<?php\n\nnamespace App\\Http\\Controllers;\n\nuse Illuminate\\Http\\Request;\n\nuse App\\Task; \n\nclass TasksController extends Controller\n{\n    /**\n     * Display a listing of the resource.\n     *\n     * @return \\Illuminate\\Http\\Response\n     */\n     public function index()\n    {\n        $data = [];\n        if (\\Auth::check()) {\n            $user = \\Auth::user();\n            $tasks = $user->tasks()->orderBy('created_at', 'desc')->paginate(10);\n\n            $data = [\n                'user' => $user,\n                'tasks' => $tasks,\n            ];\n            $data += $this->counts($user);\n            return view('tasks.index', $data);\n        }else {\n            return view('welcome');\n        }\n    }\n\n    /**\n     * Show the form for creating a new resource.\n     *\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function create()\n    {\n        $task = new Task;\n\n        return view('tasks.create', [\n            'task' => $task,\n        ]);\n    }\n\n    /**\n     * Store a newly created resource in storage.\n     *\n     * @param  \\Illuminate\\Http\\Request  $request\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function store(Request $request)\n    {\n        $this->validate($request, [\n            'status' => 'required|max:10',   // add\n            'content' => 'required|max:191',\n        ]);\n        \n        $data = [];\n        if (\\Auth::check()) {\n            $user = \\Auth::user();\n            $tasks = $user->tasks()->orderBy('created_at', 'desc')->paginate(10);\n\n            $data = [\n                'user' => $user,\n                'tasks' => $tasks,\n            ];\n            return view('tasks.store', $data);\n        }else {\n            return view('welcome');\n        }\n    }\n\n    /**\n     * Display the specified resource.\n     *\n     * @param  int  $id\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function show($id)\n    {\n        $task = Task::find($id);\n\n        return view('tasks.show', [\n            'task' => $task,\n        ]);\n    }\n\n    /**\n     * Show the form for editing the specified resource.\n     *\n     * @param  int  $id\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function edit($id)\n    {\n         $task = Task::find($id);\n\n        return view('tasks.edit', [\n            'task' => $task,\n        ]);\n    }\n\n    /**\n     * Update the specified resource in storage.\n     *\n     * @param  \\Illuminate\\Http\\Request  $request\n     * @param  int  $id\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function update(Request $request, $id)\n    {\n        $this->validate($request, [\n            'status' => 'required|max:10', \n            'content' => 'required|max:191',\n        ]);\n\n        $task = Task::find($id);\n        $task->status = $request->status; \n        $task->content = $request->content;\n        $task->save();\n\n        return redirect('/');\n    }\n\n    /**\n     * Remove the specified resource from storage.\n     *\n     * @param  int  $id\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function destroy($id)\n    {\n        $task = \\App\\Task::find($id);\n\n        if (\\Auth::user()->id === $task->user_id) {\n            $task->delete();\n        }\n\n        return redirect()->back();\n    }\n}\n","undoManager":{"mark":0,"position":-1,"stack":[[{"start":{"row":0,"column":0},"end":{"row":144,"column":0},"action":"remove","lines":["<?php","","namespace App\\Http\\Controllers;","","use Illuminate\\Http\\Request;","","use App\\Task; ","","class TasksController extends Controller","{","    /**","     * Display a listing of the resource.","     *","     * @return \\Illuminate\\Http\\Response","     */","     public function index()","    {","        $data = [];","        if (\\Auth::check()) {","            $user = \\Auth::user();","            $tasks = $user->tasks()->orderBy('created_at', 'desc')->paginate(10);","","            $data = [","                'user' => $user,","                'tasks' => $tasks,","            ];","            $data += $this->counts($user);","            return view('tasks.index', $data);","        }else {","            return view('welcome');","        }","    }","","    /**","     * Show the form for creating a new resource.","     *","     * @return \\Illuminate\\Http\\Response","     */","    public function create()","    {","        $task = new Task;","","        return view('tasks.create', [","            'task' => $task,","        ]);","    }","","    /**","     * Store a newly created resource in storage.","     *","     * @param  \\Illuminate\\Http\\Request  $request","     * @return \\Illuminate\\Http\\Response","     */","    public function store(Request $request)","    {","        $this->validate($request, [","            'status' => 'required|max:10',   // add","            'content' => 'required|max:191',","        ]);","        ","        $data = [];","        if (\\Auth::check()) {","            $user = \\Auth::user();","            $tasks = $user->tasks()->orderBy('created_at', 'desc')->paginate(10);","","            $data = [","                'user' => $user,","                'tasks' => $tasks,","            ];","            return view('tasks.store', $data);","        }else {","            return view('welcome');","        }","    }","","    /**","     * Display the specified resource.","     *","     * @param  int  $id","     * @return \\Illuminate\\Http\\Response","     */","    public function show($id)","    {","        $task = Task::find($id);","","        return view('tasks.show', [","            'task' => $task,","        ]);","    }","","    /**","     * Show the form for editing the specified resource.","     *","     * @param  int  $id","     * @return \\Illuminate\\Http\\Response","     */","    public function edit($id)","    {","         $task = Task::find($id);","","        return view('tasks.edit', [","            'task' => $task,","        ]);","    }","","    /**","     * Update the specified resource in storage.","     *","     * @param  \\Illuminate\\Http\\Request  $request","     * @param  int  $id","     * @return \\Illuminate\\Http\\Response","     */","    public function update(Request $request, $id)","    {","        $this->validate($request, [","            'status' => 'required|max:10', ","            'content' => 'required|max:191',","        ]);","","        $task = Task::find($id);","        $task->status = $request->status; ","        $task->content = $request->content;","        $task->save();","","        return redirect('/');","    }","","    /**","     * Remove the specified resource from storage.","     *","     * @param  int  $id","     * @return \\Illuminate\\Http\\Response","     */","    public function destroy($id)","    {","        $task = \\App\\Task::find($id);","","        if (\\Auth::user()->id === $task->user_id) {","            $task->delete();","        }","","        return redirect()->back();","    }","}",""],"id":35},{"start":{"row":0,"column":0},"end":{"row":151,"column":1},"action":"insert","lines":["<?php","","namespace App\\Http\\Controllers;","","use Illuminate\\Http\\Request;","use App\\Http\\Requests;","","use App\\Task;    ","","class tasksController extends Controller","{","    /**","     * Display a listing of the resource.","     *","     * @return \\Illuminate\\Http\\Response","     */","     public function index()","    {","        $data = [];","        if (\\Auth::check()) {","            $user = \\Auth::user();","            $tasks = $user->tasks()->orderBy('created_at', 'desc')->paginate(10);","","            $data = [","                'user' => $user,","                'tasks' => $tasks,","            ];","            return view('tasks.index', $data);","        }else {","            return view('welcome');","        }","    }","","","    /**","     * Show the form for creating a new resource.","     *","     * @return \\Illuminate\\Http\\Response","     */","    public function create()","    {","         $task = new Task;","","        return view('tasks.create', [","            'task' => $task,","        ]);","    }","","    /**","     * Store a newly created resource in storage.","     *","     * @param  \\Illuminate\\Http\\Request  $request","     * @return \\Illuminate\\Http\\Response","     */","        public function store(Request $request)","    {","        $this->validate($request, [","            'status' => 'required|max:10',   // add","            'content' => 'required|max:191',","        ]);","        ","        $data = [];","        if (\\Auth::check()) {","            $user = \\Auth::user();","            $tasks = $user->tasks()->orderBy('created_at', 'desc')->paginate(10);","","            $data = [","                'user' => $user,","                'tasks' => $tasks,","            ];","            return view('tasks.store', $data);","        }else {","            return view('welcome');","        }","    }","","    /**","     * Display the specified resource.","     *","     * @param  int  $id","     * @return \\Illuminate\\Http\\Response","     */","    public function show($id)","    {","    $task = Task::find($id);","","        if (\\Auth::user()->id === $task->user_id){","            return view('tasks.show', [","            'task' => $task,","        ]);","        ","       return redirect('/');}","    }","","    /**","     * Show the form for editing the specified resource.","     *","     * @param  int  $id","     * @return \\Illuminate\\Http\\Response","     */","    public function edit($id)","    {","       $task = Task::find($id);","","         if (\\Auth::user()->id === $task->user_id){","            return view('tasks.edit', [","            'task' => $task,","        ]);","        ","       return redirect('/');}","    }","","    /**","     * Update the specified resource in storage.","     *","     * @param  \\Illuminate\\Http\\Request  $request","     * @param  int  $id","     * @return \\Illuminate\\Http\\Response","     */","      public function update(Request $request, $id)","    {","          $this->validate($request, [","            'status' => 'required|max:10',   // add","            'content' => 'required|max:191',","        ]);","        ","        $task = Task::find($id);","        $task->content = $request->content;","        $task->save();","","        return redirect('/');","    }","","    /**","     * Remove the specified resource from storage.","     *","     * @param  int  $id","     * @return \\Illuminate\\Http\\Response","     */","     public function destroy($id)","    {","        $task = Task::find($id);","         ","        if (\\Auth::user()->id === $task->user_id){","            $task->delete();","","        return redirect('/');","    }else {","            return view('welcome');","        }","    }","}"]}]]},"ace":{"folds":[],"scrolltop":750,"scrollleft":0,"selection":{"start":{"row":65,"column":21},"end":{"row":65,"column":21},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1528431618703}